%i "cam_test.inc"
%i "VGA.inc"
%i "camera.inc"
%i "vram.inc"
%i "motor.inc"
#include "uart.inc"
module cam_test{
     uart send;
	VGA VGA_out;
    camera camera_out[2];
   vram vram_x[6];
    
    motor motor_x[2];
    reg uart_time[2]=2'b0;
    reg wait_uart[12]=12'b0;
    reg clk25=1'b0;
    reg rgb_num[32]=32'b0;
    reg uart_data[8]=8'b0;
    reg uart_data2[8]=8'b0;
    reg uart_data3[8]=8'b0;
    reg motor_light=1'b0;
    reg motor_sw[4]=4'b0;
    reg VGA_plot_num_x[32]=32'b0;
    reg VGA_plot_num_y[32]=32'b0;
    reg plot_num_x[32]=32'b0;
    reg plot_num[32]=32'b0;
    reg plot_nums[32]=32'b0;
    reg plot_num_y[32]=32'b0;
    reg wait_motor[10]=10'b0;

    reg plot_num_x2[32]=32'b0;
    
    reg motor_enable=1'b0;

    reg plot_num_y2[32]=32'b0;
    reg count[32]=32'b0;
    reg motor_state[3]=3'b0;
    reg uart_data_in[8]=8'b0;
    reg motor_mode[3]=3'b0;
 
    reg end_sw=1'b0;
    mem encode[16][8]={0b00111111,0b00000110,
	0b01011011,0b01001111,
	0b01100110,0b01101101,
	0b01111101,0b00100111,
	0b01111111,0b01101111,
    0b01110111,0b01111100,
	0b00111001,0b01011110,
	0b01111001,0b01110001};
    motor_x[0].push=push;
    motor_x[1].push=push;
    
    motor_x[0].push_minus=push_minus;
    motor_x[1].push_minus=push_minus;
    VGA_VS=VGA_out.VGA_VS;
    //HEX0=VGA_out.HEX0;
    
    //HEX1=~encode[motor_x[0].HEX];
    
    //HEX2=~encode[motor_x[1].HEX];
    HEX0=~encode[motor_x[0].HEXpwm];
    HEX1=~encode[motor_x[0].HEXpwm1];
    HEX2=~encode[motor_x[0].HEXpwm2];
    HEX3=~encode[motor_x[0].HEXpwm3];
    HEX4=~encode[motor_x[0].HEXpwm4];
    HEX5=~encode[motor_x[0].HEXpwm5];
    VGA_HS=VGA_out.VGA_HS;
    
   
    xclk=camera_out[0].xclk;
    sda=camera_out[0].sda;
    scl=camera_out[0].scl;
    pwdn=camera_out[0].pwdn;
    camera_out[0].href=href;
    camera_out[0].pclk=pclk;
    reset=camera_out[0].reset;
    camera_out[0].in_data=in_data;
    camera_out[0].c_vsync=c_vsync;
    
    

    xclk2=camera_out[1].xclk;
sda2=camera_out[1].sda;
scl2=camera_out[1].scl;
pwdn2=camera_out[1].pwdn;
camera_out[1].href=href2;
camera_out[1].pclk=pclk2;
reset2=camera_out[1].reset;
camera_out[1].in_data=in_data2;
camera_out[1].c_vsync=c_vsync2;


  
   if(~sw_send){
        VGA_plot_num_x:=32'(VGA_out.plot_num_x-7);
    VGA_plot_num_y:=(32'(VGA_out.plot_num_y))<<7;
  
        plot_num_x2:=32'(camera_out[1].out_plot_num_x);
        plot_num_y2:=(32'(camera_out[1].out_plot_num_y))<<7;
        plot_num_x:=32'(camera_out[0].out_plot_num_x);
        plot_num_y:=(32'(camera_out[0].out_plot_num_y))<<7;
    if(camera_out[0].out_plot_num_x>=0&&camera_out[0].out_plot_num_x<128&&camera_out[0].out_plot_num_y>=0&&camera_out[0].out_plot_num_y<128){
       plot_num:=32'((32'(plot_num_x))+(32'((32'(plot_num_y)))));
            vram_x[0].data=camera_out[0].VGA_B;
            vram_x[0].wren=1'b1;
            vram_x[0].wraddress=plot_num[13:0];

       
           vram_x[1].data=camera_out[0].VGA_G;
            vram_x[2].data=camera_out[0].VGA_R;
            vram_x[1].wren=1'b1;
            vram_x[2].wren=1'b1;
            vram_x[1].wraddress=plot_num[13:0];
            vram_x[2].wraddress=plot_num[13:0];
        
    }else{
        vram_x[0].wren=1'b0;
        vram_x[1].wren=1'b0;
        vram_x[2].wren=1'b0;
    }

    if(camera_out[1].out_plot_num_x>=0&&camera_out[1].out_plot_num_x<128&&camera_out[1].out_plot_num_y>=0&&camera_out[1].out_plot_num_y<128){
       plot_num:=32'((32'(plot_num_x2))+(32'((32'(plot_num_y2)))));
            vram_x[3].data=camera_out[1].VGA_B;
            vram_x[3].wren=1'b1;
            vram_x[3].wraddress=plot_num[13:0];

       
           vram_x[4].data=camera_out[1].VGA_G;
            vram_x[5].data=camera_out[1].VGA_R;
            vram_x[4].wren=1'b1;
            vram_x[5].wren=1'b1;
            vram_x[4].wraddress=plot_num[13:0];
            vram_x[5].wraddress=plot_num[13:0];
        
    }else{
        vram_x[3].wren=1'b0;
        vram_x[4].wren=1'b0;
        vram_x[5].wren=1'b0;
    }
   }else{
        vram_x[0].wren=1'b0;
        vram_x[1].wren=1'b0;
        vram_x[2].wren=1'b0;
        vram_x[3].wren=1'b0;
        vram_x[4].wren=1'b0;
        vram_x[5].wren=1'b0;
    } 
    if(~sw_send){
    if((VGA_out.plot_num_x-7)>=0&&(VGA_out.plot_num_x-7)<128&&(VGA_out.plot_num_y>=0)&&VGA_out.plot_num_y<128){
        plot_nums:=32'((32'(VGA_plot_num_x))+(32'((32'(VGA_plot_num_y)))));       
        vram_x[0].rdaddress=plot_nums[13:0];
        vram_x[1].rdaddress=plot_nums[13:0];
        vram_x[2].rdaddress=plot_nums[13:0];
        VGA_B=vram_x[0].q;
        VGA_G=vram_x[1].q;
        VGA_R=vram_x[2].q;
       
        if((VGA_out.plot_num_x-7)==0&&VGA_out.plot_num_y>=0){
            if(wait_motor==19){
                wait_motor:=0;
            }else{
                wait_motor++;
            }
            motor_light:=~(((vram_x[0].q<4)&&(vram_x[1].q<4)&&(vram_x[2].q<4)));
            motor_enable:=motor_light;
        }else{
            motor_light:=(~(((vram_x[0].q<4)&&(vram_x[1].q<4)&&(vram_x[2].q<4)))&motor_light);
        }
    }else if((VGA_out.plot_num_x-7)>=128&&(VGA_out.plot_num_x-7)<256&&(VGA_out.plot_num_y>=128)&&VGA_out.plot_num_y<256){
        plot_nums:=32'((32'(VGA_plot_num_x))+(32'((32'(VGA_plot_num_y)))));       
        vram_x[3].rdaddress=plot_nums[13:0];
        vram_x[4].rdaddress=plot_nums[13:0];
        vram_x[5].rdaddress=plot_nums[13:0];
        VGA_B=vram_x[3].q;
        VGA_G=vram_x[4].q;
        VGA_R=vram_x[5].q;
        motor_light:=(~(((vram_x[3].q<4)&&(vram_x[4].q<4)&&(vram_x[5].q<4)))&motor_light);
    }else{
        VGA_R=0x0;
        VGA_G=0x0;
        VGA_B=0x0;
    }
    }else{
        VGA_R=0x0;
        VGA_G=0x0;
        VGA_B=0x0;
    }
    if(count==100000000){
        count:=0;
        motor_state++;
    }else if(motor_enable){
        count++;
    }
    if(motor_state[0]==0){
        motor_mode:=MOTOR_STOP;
    }else{
        if(motor_state[1:0]==1){
            motor_mode:=MOTOR_STRATE;
        }
        
        if(motor_state==3){
            motor_mode:=MOTOR_RIGHT;
        }
        
        if(motor_state==7){
            motor_mode:=MOTOR_LEFT;
        }
    }
    if(motor_enable){
        if(motor_mode==MOTOR_RIGHT){
            motor_sw:=0b0101;
        }else if(motor_mode==MOTOR_LEFT){
            motor_sw:=0b1010;
        }else if(motor_mode==MOTOR_STRATE){
            motor_sw:=0b0110;
        }else if(motor_mode==MOTOR_BACK){
            motor_sw:=0b1001;
        }else{
            motor_sw:=0b0000;
        }
    }else{
        motor_sw:=4'b0;
    }
    motor_x[0].sw=motor_sw[3:2];
    motor_x[0].set_RL=1'b0;
    motor_sig=motor_x[1].power;
    motor_x[1].sw=motor_sw[1:0];
    motor_x[1].set_RL=1'b1;
    motor_sig2=motor_x[0].power;
    if(sw_send&&~end_sw){
                    vram_x[0].rdaddress=rgb_num[13:0];
                    vram_x[1].rdaddress=rgb_num[13:0];
                    vram_x[2].rdaddress=rgb_num[13:0];
        if(wait_uart>12'd2000){
                if(rgb_num>32'd16383&&rgb_num<32'd30000000){
                    rgb_num:=32'd3000000;
                     end_sw:=0b1;
                }else{
                     send.Tx_Start_i();
                    if(uart_time==2){
               
                        uart_data_in:=uart_data3;
               

                    }
                    if(uart_time==3){
               
                        uart_data_in:=0xf9;
              

                        rgb_num++;
                    }

                    if(uart_time==0){
                   
                        uart_data_in:={vram_x[2].q,vram_x[1].q};
               

                    
                        uart_data2:={vram_x[0].q,4'b0000};
                         rgb_num++;
                    }      
                    if(uart_time==1){
                 
                       uart_data_in:={uart_data2[7:4],(vram_x[2].q)};
                      /*  vram_x[0].rdaddress=rgb_num[13:0];
                    vram_x[1].rdaddress=rgb_num[13:0];
                    vram_x[2].rdaddress=rgb_num[13:0];
                        
                   */
                        uart_data3:={vram_x[1].q,vram_x[0].q};
                    
                        
                    }
                        
                     uart_time++;
                }
                 
                wait_uart:=12'b0;
           
        }else{
            wait_uart++;
        }
        
    }
    if(~sw_send){
        
        end_sw:=0b0;
        uart_data:=8'b0;
        uart_data2:=8'b0;
        uart_data3:=8'b0;
        uart_time:=2'b0;
        rgb_num:=32'b0;
        wait_uart:=12'b0;
       
    }
    clk25:=clk25;
    send.Freq_Divide_Param_i=0x0000;
     send.Tx_BitLength_i=0b11;
     send.Tx_ParityEN_i =0b0;
     send.Tx_Enable_i=TRUE;
     send.Tx_Data_i=uart_data_in;
     send.Tx_OddParity_i=1'b0; 
     txd=send.TxD_o;
}
/*
RGB vram_x ( .data(_vram_x_data),.inclock(pclk),.outclock(m_clock), .rdaddress(_vram_x_rdaddress), .wraddress(_vram_x_wraddress), .wren(_vram_x_wren), .q(_vram_x_q));
RGB vram_x_2 ( .data(_vram_x_2_data),.inclock(pclk),.outclock(m_clock), .rdaddress(_vram_x_2_rdaddress), .wraddress(_vram_x_2_wraddress), .wren(_vram_x_2_wren), .q(_vram_x_2_q));
RGB vram_x_1 ( .data(_vram_x_1_data),.inclock(pclk),.outclock(m_clock), .rdaddress(_vram_x_1_rdaddress), .wraddress(_vram_x_1_wraddress), .wren(_vram_x_1_wren), .q(_vram_x_1_q));
RGB vram_x_3 ( .data(_vram_x_3_data),.inclock(pclk2),.outclock(m_clock), .rdaddress(_vram_x_3_rdaddress), .wraddress(_vram_x_3_wraddress), .wren(_vram_x_3_wren), .q(_vram_x_3_q));
RGB vram_x_5 ( .data(_vram_x_5_data),.inclock(pclk2),.outclock(m_clock), .rdaddress(_vram_x_5_rdaddress), .wraddress(_vram_x_5_wraddress), .wren(_vram_x_5_wren), .q(_vram_x_5_q));
RGB vram_x_4 ( .data(_vram_x_4_data),.inclock(pclk2),.outclock(m_clock), .rdaddress(_vram_x_4_rdaddress), .wraddress(_vram_x_4_wraddress), .wren(_vram_x_4_wren), .q(_vram_x_4_q));
*/